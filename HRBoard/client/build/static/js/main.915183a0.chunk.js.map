{"version":3,"sources":["Store/Users/Users.store.tsx","Components/DashBoardContainer/DashBoardContainer.tsx","Containers/MainContainer.tsx","Components/MenuPannel/MenuPannel.tsx","App.tsx","reportWebVitals.ts","Store/Counter/Counter.store.tsx","Store/Counter/Counter.saga.tsx","services/api.ts","services/constants/apiUrl.ts","services/HTTPService.ts","services/constants/api/index.ts","Store/Users/Users.saga.tsx","Store/roots.tsx","Store/index.tsx","index.tsx"],"names":["REQ_GET_USERS","RES_GET_USERS","users","createReducer","userList","state","action","payload","DashBoardContainer","props","size","className","MainContainer","menus","Tools","text","key","icon","Object","freeze","MenuPannel","React","setView","history","useHistory","location","pathname","historyState","setHistoryState","listen","setTimeout","keys","map","item","menu","to","split","connect","Users","reqGetUsers","page","limit","type","id","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREASE","DECREASE","INCREASE_BY","ASYNC_INCREASE","ASYNC_DECREASE","counter","number","asyncIncreaseGen","asyncDecreaseGen","select","Counter","console","log","put","delay","counterSaga","all","takeLatest","takeEvery","Api","method","apiUrl","url","data","options","header","_options","defaultHeaderOptions","headers","qs","length","entries","entry","join","axios","SERVER_URL","dummy","request","bind","makeObject","makeDeepFreeze","target","isFrozen","forEach","res","searchHeader","headerRes","obj","this","host","searchHeaders","ajax","catch","e","Error","JSON","stringify","error","ApiUrl","reqGetAllUsersApi","genFunc","cb","param","_page","_limit","params","requestFunc","HTTPService","call","usersSaga","rootSaga","rootReducer","combineReducers","fork","sagaMiddleware","createSagaMiddleware","_enhancer","applyMiddleware","store","createStore","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.915183a0.chunk.js","sourcesContent":["import { createReducer } from \"typesafe-actions\";\nimport { UsersActionTypes, IReqGetUsers, IUsersState } from \".\";\nexport const REQ_GET_USERS = \"users/REQ_GET_USERS\";\nexport const RES_GET_USERS = \"users/RES_GET_USERS\";\n\nconst initialState: IUsersState = {\n  userList: [],\n};\n\nconst users = createReducer<IUsersState, UsersActionTypes>(initialState, {\n  [RES_GET_USERS]: (state: IUsersState, action: UsersActionTypes) => {\n    return { ...state, userList: [...state.userList, ...action.payload.users] };\n  },\n});\n\nexport const reqGetUsers: (payload: { page: number; limit: number }) => IReqGetUsers = ({ page, limit = 2 }) => ({\n  type: REQ_GET_USERS,\n  payload: { page, limit },\n});\n\nexport default users;\n","import React from \"react\";\nimport \"./DashBoardContainer.scss\";\n\ntype Props = {\n  size: string;\n};\n\nconst DashBoardContainer: React.FC<Partial<Props>> = (props) => {\n  const { size } = props;\n  return (\n    <div className={`DashBoardContainer ${size}`}>\n      <span>123</span>\n    </div>\n  );\n};\n\nexport default DashBoardContainer;\n","import DashBoardContainer from \"Components/DashBoardContainer/DashBoardContainer\";\nimport React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer: React.FC = () => {\n  return (\n    <div className=\"MainContainer\">\n      <DashBoardContainer size=\"medium\"></DashBoardContainer>\n      <DashBoardContainer size=\"medium\"></DashBoardContainer>\n      <DashBoardContainer size=\"large\"></DashBoardContainer>\n      <DashBoardContainer size=\"small\"></DashBoardContainer>\n      <DashBoardContainer size=\"small\"></DashBoardContainer>\n      <DashBoardContainer size=\"small\"></DashBoardContainer>\n    </div>\n  );\n};\n\nexport default MainContainer;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaMoneyCheckAlt, FaUser } from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport { IoMdStats, IoMdDocument, IoMdChatboxes } from \"react-icons/io\";\nimport { BiSupport } from \"react-icons/bi\";\nimport { RiTodoFill } from \"react-icons/ri\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./MenuPannel.scss\";\n\ninterface ILink {\n  text: string;\n  key: string;\n  icon: React.ReactElement;\n  href?: string;\n}\n\ntype ArrayValue = Array<ILink>;\n\ntype SubTitle = \"Tools\" | \"Other\";\n\ntype Menus = Record<SubTitle, ArrayValue>;\nconst menus = {\n  Tools: [\n    {\n      text: \"DashBoard\",\n      key: \"\",\n      icon: <MdDashboard />,\n    },\n    {\n      text: \"Todos\",\n      key: \"todo\",\n      icon: <RiTodoFill />,\n    },\n    // {\n    //   text: \"People\",\n    //   key: \"people\",\n    //   icon: <FaUser />,\n    // },\n    // {\n    //   text: \"Statistics\",\n    //   key: \"stat\",\n    //   icon: <IoMdStats />,\n    // },\n    // {\n    //   text: \"Documents\",\n    //   key: \"docs\",\n    //   icon: <IoMdDocument />,\n    // },\n  ],\n  // Other: [\n  //   // {\n  //   //   text: \"Chat\",\n  //   //   key: \"chat\",\n  //   //   icon: <IoMdChatboxes />,\n  //   // },\n  //   // {\n  //   //   text: \"Support\",\n  //   //   key: \"Support\",\n  //   //   icon: <BiSupport />,\n  //   // },\n  // ],\n};\n\nObject.freeze(menus);\n\ntype Props = {};\n\nconst MenuPannel: React.FC<Props> = (props) => {\n  const [isView, setView] = React.useState(false);\n  const history = useHistory();\n  const [historyState, setHistoryState] = React.useState(history.location.pathname);\n\n  React.useEffect(() => {\n    history.listen((location) => {\n      setHistoryState(location.pathname);\n    });\n  }, [history]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setView(true);\n    }, 2000);\n  }, []);\n\n  return (\n    <div className=\"MenuPannel\">\n      <h3 className=\"title\">SH Board</h3>\n      <div className=\"section section1\">\n        {Object.keys(menus as Menus).map((item) => {\n          return (\n            <React.Fragment key={item}>\n              <p className=\"title\">{item}</p>\n              <ul className=\"menu-list\">\n                {(menus as any)[item as SubTitle].map((menu: ILink) => (\n                  <Link to={menu.key} key={menu.key}>\n                    <li className={`menu-list__item item1 ${historyState.split(\"/\")[1] === menu.key ? \"selected\" : \"\"}`} key={menu.key}>\n                      {menu.icon}\n                      <span>{menu.text}</span>\n                    </li>\n                  </Link>\n                ))}\n              </ul>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MenuPannel;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch, useHistory } from \"react-router-dom\";\nimport { IUsersState } from \"./Store/Users\";\nimport { connect } from \"react-redux\";\nimport { reqGetUsers } from \"Store/Users/Users.store\";\nimport MainContainer from \"Containers/MainContainer\";\nimport MenuPannel from \"Components/MenuPannel/MenuPannel\";\n\nfunction App() {\n  return (\n    <div className={`App`}>\n      <Router>\n        <div id=\"Menu\">\n          <MenuPannel />\n        </div>\n        <div id=\"container\">\n          <Switch>\n            <Route path=\"/\" component={MainContainer} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ Users }: { Users: IUsersState }) => ({\n    users: Users.userList,\n  }),\n  {\n    reqGetUsers,\n  }\n)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createAction, createReducer } from \"typesafe-actions\";\n\nexport const INCREASE = \"counter/INCREASE\";\nexport const DECREASE = \"counter/DECREASE\";\nexport const INCREASE_BY = \"counter/INCREASE_BY\";\n\nexport const ASYNC_INCREASE = \"counter/ASYNC_INCREASE\";\nexport const ASYNC_DECREASE = \"counter/ASYNC_DECREASE\";\n\ntype CounterAction = ReturnType<typeof increase> | ReturnType<typeof decrease> | ReturnType<typeof increaseBy>;\n\nexport type CounterState = {\n  number: number;\n};\n\nconst initialState: CounterState = {\n  number: 0,\n};\n\nconst counter = createReducer<CounterState, CounterAction>(initialState, {\n  [INCREASE]: (state: CounterState) => {\n    return { ...state, number: state.number + 1 };\n  },\n  [DECREASE]: (state: CounterState) => ({ ...state, number: state.number - 1 }),\n  [INCREASE_BY]: (state: CounterState, action: any) => ({\n    ...state,\n    number: state.number + action.payload,\n  }),\n});\n\n// export const increase = createAction(INCREASE)();\n\nexport const increase = () => ({\n  type: INCREASE,\n});\n\nexport const decrease = () => ({\n  type: DECREASE,\n});\n\n// export const decrease = createAction(DECREASE)();\nexport const increaseBy = (payload: number) => ({\n  type: INCREASE_BY,\n  payload,\n});\n\nexport const asyncIncrease = () => ({\n  type: ASYNC_INCREASE,\n});\n\nexport const asyncDecrease = () => ({\n  type: ASYNC_DECREASE,\n});\n\n// export const asyncIncrease = createAction(ASYNC_INCREASE)();\n// export const asyncDecrease = createAction(ASYNC_DECREASE)();\n\nexport default counter;\n","import { all, put, takeEvery, takeLatest, delay, takeLeading, take, call, fork, select } from \"redux-saga/effects\";\nimport { ASYNC_DECREASE, ASYNC_INCREASE, DECREASE, INCREASE } from \"./Counter.store\";\n\n/********************************************************************************\n *  Generate Function\n ********************************************************************************/\nfunction* asyncIncreaseGen() {\n  // yield delay(3000);\n  const number = yield select((state: any) => state.Counter.number);\n  console.log(number);\n  yield put({\n    type: INCREASE,\n  });\n}\n\nfunction* asyncDecreaseGen() {\n  yield delay(3000);\n  yield put({\n    type: DECREASE,\n  });\n}\n\n// export function* watchDecrease() {\n//   while (true) {\n//     yield take(ASYNC_DECREASE);\n//     yield fork(asyncDecreaseGen);\n//   }\n// }\n\n/********************************************************************************\n *  watch\n ********************************************************************************/\nexport const counterSaga = function* () {\n  yield all([yield takeLatest(ASYNC_INCREASE as never, asyncIncreaseGen), yield takeEvery(ASYNC_DECREASE as never, asyncDecreaseGen)]);\n};\n","import axios, { AxiosResponse } from \"axios\";\n\nclass Api {\n  private static defaultHeaderOptions: {[key: string]: string} = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"content-type\": \"application/json\",\n  };\n  \n  protected ajax(\n    method: \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\",\n    apiUrl: string,\n    url: string,\n    data: {[key: string]: any} = {},\n    options: {[key: string]: any} = {},\n    header: {[key: string]: any} = {}\n  ):Promise<AxiosResponse> {\n    const _options = { ...Api.defaultHeaderOptions, headers: {...header}, ...options };\n    \n    if (method === \"get\" || method === \"delete\") {\n      let qs = Object.keys(data).length > 0 \n               ? ('?' + Object.entries(data).map((entry) => entry.join('=')).join('&')) \n               : '';\n      return axios[method](`${apiUrl}${url}${qs}`, _options);\n    } else {\n      return axios[method](`${apiUrl}${url}`, data, _options);\n    }\n  }\n  \n}\n\nexport default Api;\n","export const SERVER_URL: { [key: string]: string } = {\n  dummy:\n    process.env.NODE_ENV === \"development\"\n      ? \"https://jsonplaceholder.typicode.com\" // 개발모드의 경우 정적 URL\n      : \"https://jsonplaceholder.typicode.com\", // 운영모드일 경우 정적 URL\n};\n","import { AxiosError, AxiosResponse } from \"axios\";\nimport Api from \"./api\";\nimport { SERVER_URL } from \"./constants/apiUrl\";\n\nexport interface IrequestParam {\n  /**\n   *  API 요청 메소드\n   * (default: 'get')\n   * */\n  method: \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\n  /**\n   * 호스트 고정 URL\n   * (default : (constants/url.ts)에 첫번째로 지정한 프로퍼티)\n   * */\n  host: string;\n  /**\n   * 나머지 URL\n   * default: '',  호스트 URL의 루트 도메인으로 직접 요청하지 않는 이상 넣어주세요\n   * */\n  url: string;\n  /**\n   * Data 보낼 형식  (request body에 들어갈 것)\n   * (default: Empty Object Literal)\n   * GET이나 DELETE 요청시에는 자동으로 queryString으로 변환\n   */\n  data: { [key: string]: any };\n  /**\n   * request Header에 넣을 값 예시 {token: '1234'}\n   *  (default: Empty Object Literal) - {})\n   */\n  headers: { [key: string]: any };\n  /**\n   * 요청 content-type 변경시에 사용을 권장 (기본 request payload 변경)\n   * (default: Empty Object Literal) - {})\n   */\n  options: { [key: string]: any };\n  /**\n   * response Header에서 빼올 값들 문자열 배열로 지정\n   * (default: Empty Array Literal) - [])\n   */\n  searchHeaders: Array<string> | [];\n}\n\nclass HTTPService extends Api {\n  constructor() {\n    super();\n\n    this.request = this.request.bind(this);\n    this.makeObject = this.makeObject.bind(this);\n    this.makeDeepFreeze = this.makeDeepFreeze.bind(this);\n  }\n\n  /**\n   *\n   *\n   * @private\n   * @description 불변 객체 생성(서버 결과값 수정 불가능하게) - 재귀적으로 돈다\n   * @param {{ [key: string]: any }} target\n   * @returns {{ [key: string]: any }}\n   * @memberof HTTPService\n   */\n  private makeDeepFreeze(target: { [key: string]: any }): { [key: string]: any } {\n    if (target && typeof target === \"object\" && !Object.isFrozen(target)) {\n      Object.freeze(target);\n\n      Object.keys(target).forEach((key) => this.makeDeepFreeze(target[key]));\n    }\n\n    return target;\n  }\n\n  /**\n   *\n   *\n   *  @private\n   * 2@description res.data와 더불어서 만약 헤더에서 가져와야할 값들을 추출하여, 같이 object에 담은 배열 리턴\n   * - object 타입이 아닌 경우에는 singleRes라는 심볼 프로퍼티에 담아준다.\n   * 불변성을 확보 하기 위해서 만약 서버 응답에 대한 처리를 수정할 수 있게 해주면 나중에 서버쪽 응답의 문제로 생각할 수 있기에\n   * @template T\n   * @param {Readonly<AxiosResponse<T>>} res\n   * @param {Array<string>} searchHeader\n   * @returns\n   * @memberof HTTPService\n   */\n  private makeObject<T>(res: Readonly<AxiosResponse<T>>, searchHeader: Array<string>) {\n    let headerRes: { [key: string]: any } = {};\n\n    searchHeader.forEach((item: string) => {\n      headerRes[`${item}`] = res.headers[`${item}`];\n    });\n\n    let obj = Object.keys(headerRes).length > 0 ? { data: res.data, headers: headerRes } : { data: res.data };\n    // return obj;\n    return this.makeDeepFreeze(obj);\n  }\n\n  /**\n   *\n   * @public\n   * @template T\n   * @param {Partial<IrequestParam>} {\n   *     method = \"get\",\n   *     host = SERVER_URL[`${Object.keys(SERVER_URL)[0]}`],\n   *     url = \"\",\n   *     data = {},\n   *     options = {},\n   *     headers = {},\n   *     searchHeaders = [],\n   *   }\n   * @returns {Readonly<{ [key: string]: any }>}\n   * @memberof HTTPService\n   */\n  request<T>({\n    method = \"get\",\n    host = SERVER_URL[`${Object.keys(SERVER_URL)[0]}`],\n    url = \"\",\n    data = {},\n    options = {},\n    headers = {},\n    searchHeaders = [],\n  }: Partial<IrequestParam>): Readonly<{ [key: string]: any }> {\n    try {\n      return this.ajax(method, host, url, data, headers, options)\n        .then((res: Readonly<AxiosResponse<T>>) => this.makeObject<T>(res, searchHeaders))\n        .catch((e: Readonly<AxiosError<T>>) => {\n          throw new Error(typeof e === \"object\" ? JSON.stringify(e) : \"\" + e);\n        });\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n}\n\nexport default new HTTPService();\n","const users: string = \"/users\";\nconst comments: string = \"/comments\";\nconst posts: string = \"/posts\";\nconst albums: string = \"/albums\";\nconst photos: string = \"/photos\";\nconst todos: string = \"/todos\";\n\nexport const ApiUrl: { [key: string]: string } = {\n  users,\n  comments,\n  posts,\n  albums,\n  photos,\n  todos,\n};\n","import { call, fork, all, takeEvery, take, takeLatest, takeLeading, put } from \"redux-saga/effects\";\nimport HTTPService, { IrequestParam } from \"../../services/HTTPService\";\nimport { REQ_GET_USERS, RES_GET_USERS } from \"./Users.store\";\nimport { ApiUrl } from \"../../services/constants/api\";\nimport { User } from \"Models/users\";\nimport { IReqGetUsers } from \".\";\n\nfunction genFunc<T>(cb: typeof HTTPService.request, param: Partial<IrequestParam>): typeof HTTPService.request {\n  return () => cb<T>(param);\n}\n\n/********************************************************************************\n *  Generate Function\n ********************************************************************************/\nfunction* reqGetAllUsersApi({ payload: data }: { payload: { page: number; limit: number } }) {\n  const { page: _page, limit: _limit } = data;\n  try {\n    const params: Partial<IrequestParam> = {\n      url: ApiUrl.users,\n      data: { _page, _limit },\n    };\n\n    const requestFunc = genFunc<{ data: User[]; [key: string]: any }>(HTTPService.request, params);\n\n    const { data }: { data: User[] } = yield call(requestFunc, params);\n    yield put({\n      type: RES_GET_USERS,\n      payload: { users: data },\n    });\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n/********************************************************************************\n *  watch\n ********************************************************************************/\nexport const usersSaga = function* () {\n  yield all([yield takeLatest(REQ_GET_USERS as never, reqGetAllUsersApi)]);\n};\n","import { combineReducers } from \"redux\";\nimport Counter from \"./Counter/Counter.store\";\nimport Users from \"./Users/Users.store\";\nimport { all, fork } from \"redux-saga/effects\";\n\nimport { counterSaga } from \"./Counter/Counter.saga\";\nimport { usersSaga } from \"./Users/Users.saga\";\n\n/** rootReducer */\nexport const rootReducer = combineReducers({\n  Counter,\n  Users,\n});\n\n/** ROOT Saga */\nexport function* rootSaga() {\n  yield all([yield fork(counterSaga), yield fork(usersSaga)]);\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\" // 리덕스 개발자 도구\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer, rootSaga } from \"./roots\";\n\nconst _isEnv:boolean = process.env.NODE_ENV === 'development';\nexport const sagaMiddleware  = createSagaMiddleware();\n\nconst _enhancer = _isEnv \n                ? composeWithDevTools(applyMiddleware(sagaMiddleware)) // 개발 모드\n                : applyMiddleware(sagaMiddleware); // 상용 모드의 경우 리덕스 개발자도구를 숨기는 것이 좋다.\n\n                \nexport const store = createStore(rootReducer, _enhancer);\n\nsagaMiddleware.run(rootSaga);","import React from \"react\";\nimport \"./index.scss\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}