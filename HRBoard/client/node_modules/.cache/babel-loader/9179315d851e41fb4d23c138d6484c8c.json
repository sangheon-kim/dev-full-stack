{"ast":null,"code":"import { call, all, takeLatest, put } from \"redux-saga/effects\";\nimport HTTPService from \"../../services/HTTPService\";\nimport { REQ_GET_USERS, RES_GET_USERS } from \"./Users.store\";\nimport { ApiUrl } from \"../../services/constants/api\";\n\nfunction genFunc(cb, param) {\n  return () => cb(param);\n}\n/********************************************************************************\n *  Generate Function\n ********************************************************************************/\n\n\nfunction* reqGetAllUsersApi({\n  payload: data\n}) {\n  const {\n    page: _page,\n    limit: _limit\n  } = data;\n\n  try {\n    const params = {\n      url: ApiUrl.users,\n      data: {\n        _page,\n        _limit\n      }\n    };\n    const requestFunc = genFunc(HTTPService.request, params);\n    const {\n      data\n    } = yield call(requestFunc, params);\n    yield put({\n      type: RES_GET_USERS,\n      payload: {\n        users: data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n  }\n}\n/********************************************************************************\n *  watch\n ********************************************************************************/\n\n\nexport const usersSaga = function* () {\n  yield all([yield takeLatest(REQ_GET_USERS, reqGetAllUsersApi)]);\n};","map":{"version":3,"sources":["/Users/sangheon/Documents/portfolio/dribble/HRBoard/client/src/Store/Users/Users.saga.tsx"],"names":["call","all","takeLatest","put","HTTPService","REQ_GET_USERS","RES_GET_USERS","ApiUrl","genFunc","cb","param","reqGetAllUsersApi","payload","data","page","_page","limit","_limit","params","url","users","requestFunc","request","type","e","console","error","usersSaga"],"mappings":"AAAA,SAASA,IAAT,EAAqBC,GAArB,EAA2CC,UAA3C,EAAoEC,GAApE,QAA+E,oBAA/E;AACA,OAAOC,WAAP,MAA2C,4BAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AACA,SAASC,MAAT,QAAuB,8BAAvB;;AAIA,SAASC,OAAT,CAAoBC,EAApB,EAAoDC,KAApD,EAA+G;AAC7G,SAAO,MAAMD,EAAE,CAAIC,KAAJ,CAAf;AACD;AAED;AACA;AACA;;;AACA,UAAUC,iBAAV,CAA4B;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAA5B,EAA6F;AAC3F,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,KAAK,EAAEC;AAAtB,MAAiCJ,IAAvC;;AACA,MAAI;AACF,UAAMK,MAA8B,GAAG;AACrCC,MAAAA,GAAG,EAAEZ,MAAM,CAACa,KADyB;AAErCP,MAAAA,IAAI,EAAE;AAAEE,QAAAA,KAAF;AAASE,QAAAA;AAAT;AAF+B,KAAvC;AAKA,UAAMI,WAAW,GAAGb,OAAO,CAAuCJ,WAAW,CAACkB,OAAnD,EAA4DJ,MAA5D,CAA3B;AAEA,UAAM;AAAEL,MAAAA;AAAF,QAA6B,MAAMb,IAAI,CAACqB,WAAD,EAAcH,MAAd,CAA7C;AACA,UAAMf,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEjB,aADE;AAERM,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,KAAK,EAAEP;AAAT;AAFD,KAAD,CAAT;AAID,GAbD,CAaE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;AAED;AACA;AACA;;;AACA,OAAO,MAAMG,SAAS,GAAG,aAAa;AACpC,QAAM1B,GAAG,CAAC,CAAC,MAAMC,UAAU,CAACG,aAAD,EAAyBM,iBAAzB,CAAjB,CAAD,CAAT;AACD,CAFM","sourcesContent":["import { call, fork, all, takeEvery, take, takeLatest, takeLeading, put } from \"redux-saga/effects\";\nimport HTTPService, { IrequestParam } from \"../../services/HTTPService\";\nimport { REQ_GET_USERS, RES_GET_USERS } from \"./Users.store\";\nimport { ApiUrl } from \"../../services/constants/api\";\nimport { User } from \"Models/users\";\nimport { IReqGetUsers } from \".\";\n\nfunction genFunc<T>(cb: typeof HTTPService.request, param: Partial<IrequestParam>): typeof HTTPService.request {\n  return () => cb<T>(param);\n}\n\n/********************************************************************************\n *  Generate Function\n ********************************************************************************/\nfunction* reqGetAllUsersApi({ payload: data }: { payload: { page: number; limit: number } }) {\n  const { page: _page, limit: _limit } = data;\n  try {\n    const params: Partial<IrequestParam> = {\n      url: ApiUrl.users,\n      data: { _page, _limit },\n    };\n\n    const requestFunc = genFunc<{ data: User[]; [key: string]: any }>(HTTPService.request, params);\n\n    const { data }: { data: User[] } = yield call(requestFunc, params);\n    yield put({\n      type: RES_GET_USERS,\n      payload: { users: data },\n    });\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n/********************************************************************************\n *  watch\n ********************************************************************************/\nexport const usersSaga = function* () {\n  yield all([yield takeLatest(REQ_GET_USERS as never, reqGetAllUsersApi)]);\n};\n"]},"metadata":{},"sourceType":"module"}